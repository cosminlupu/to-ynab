{
  "name": "To-ynab",
  "tagline": "Convert csv files from different sources, like banks to YNAB ( youneedabudget.com ) ready csv files",
  "body": "to-ynab\r\n====\r\n_by @cosminlupu_\r\n\r\n> Converts bank ( and other sources ) .csv files to .csv files ready to import in YNAB ( [youneedabudget.com](https://youneedabudget.com/) ) \r\n\r\n[![Build Status](https://travis-ci.org/cosminlupu/to-ynab.svg?branch=master)](https://travis-ci.org/cosminlupu/to-ynab) [![Coverage Status](https://coveralls.io/repos/github/cosminlupu/to-ynab/badge.svg?branch=master)](https://coveralls.io/github/cosminlupu/to-ynab?branch=master)\r\n\r\n## Features\r\n* CSV conversion\r\n* API to use _to-ynab_ programmatically\r\n* CLI for easy use\r\n\r\n### TODO\r\n\r\n* Support for more .csv sources ( Currently only Nordea bank )\r\n* Support for own source config via a json file\r\n\r\n## How to install\r\nTo use _to-ynab_ via cli, install it globally using **npm**:\r\n```\r\nnpm install -g to-ynab\r\n```\r\n\r\nIf you want to use the API instead, install it locally:\r\n```\r\nnpm install --save to-ynab\r\n```\r\n\r\nthen, include it in your javascript:\r\n```js\r\nvar to-ynab = require('to-ynab');\r\n```\r\n\r\n## How to use via CLI\r\nTo create a YNAB ready `.csv` file from your own .csv file\r\n```\r\nto-ynab <file.csv>\r\n```\r\nFor example:\r\n```\r\nto-ynab transactions.csv\r\n```\r\nWill generate `ynab.csv`.\r\n\r\n### Available CLI options\r\n* `-h`, `--help`                output usage information\r\n* `-V`, `--version`             output the version number\r\n* `-s`, `--source [value]`      Source to use for reading the provided csv. Default: `nordea`\r\n* `-o`, `--output [value]`      Output filename (with or without .csv extension). Default: `ynab`\r\n* `-l`, `--lastdate [value]`    Last date for a transaction to be added to generated csv.\r\n* `-p`, `--payees [payees]`     List of payees to match in description, comma separated.\r\n* `-d`, `--delimitor [value]`   Cell delimitor in source file ( same one will be used in generated file). Default: `;`\r\n* `-c`, `--csvstring`           Provide a csv string instead of file\r\n* `-n`, `--no-write`            Does not write the generated file, it just outputs it.\r\n* `-f`, `--dateformat [value]`  Date format for the generated csv. Default: `DD/MM/YYYY`\r\n\r\n\r\n\r\n## How to use via API\r\nInclude _to-ynab_ in your javascript with:\r\n```js\r\nlet to-ynab = require('to-ynab');\r\n```\r\n\r\nThen to render a csv file:\r\n```js\r\n\r\nto-ynab('transactions.csv')\r\n    .then( (result) => {\r\n        console.log(result); //In this case result will a success message with the location of the generated file\r\n    }).catch( (err) => {\r\n        console.log(err);\r\n    });\r\n```\r\n\r\nPassing options:\r\n```js\r\n\r\nto-ynab('transactions.csv', {\r\n        output: myfile.csv,\r\n        write: false\r\n    }).then( (result) => {\r\n        console.log(result); //In this case result will be a string version of the generated file\r\n    }).catch( (err) => {\r\n        console.log(err);\r\n    });\r\n```\r\n\r\n### Available API options\r\n```js\r\n{\r\n    source: 'nordea',                   //Source to use for reading the provided csv. Default: _nordea_\r\n    output: 'ynab',                     //Output filename (with or without .csv extension). Default: _ynab_\r\n    lastdate: '18/10/2016',             //Last date for a transaction to be added to generated csv.\r\n    payees: ['Just eat', 'Spotify'],    //List of payees to match in description, comma separated.\r\n    delimitor: ';',                     //Cell delimitor in source file ( same one will be used in generated file). Default: _;_\r\n    csvstring: false,                   //Provide a csv string instead of file\r\n    write: true,                        //Writes the contents to file. Default: _true_\r\n    dateformat: 'DD/MM/YYYY'            //Date format for the generated csv. Default: _DD/MM/YYYY_\r\n}\r\n```\r\n\r\n## Developing / extending\r\n\r\n* To install dependencies execute `npm install`\r\n* To test, execute `npm test` ( This will run _Mocha_ tests and _Instanbul_ coverage report)\r\n* To execute the CLI, execute `npm start -- <file.csv> [options]`\r\n* To install your local version globally, execute `npm install -g .` on the project folder ( Only use for development)\r\n\r\n\r\n## How to contribute\r\nTo contribute to **to-ynab** you should fork this repository with `git`.\r\n\r\n1. Make a change that you might see fit on your own fork ( using _develop_ branch )\r\n2. Create tests for your change, and also make sure the existing tests pass\r\n4. Only make pull requests from the _develop_ branch. Pull requests from master won't be merged\r\n5. Check the opened and closed issues before creating one\r\n\r\nThanks for your help!\r\n\r\n## License\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}